<UserControl x:Class="Information_system.Views.UserControls.ListOfBookings"
             xmlns:local="clr-namespace:Information_system.Views.UserControls"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
             xmlns:vm="clr-namespace:Information_system.ViewModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:cvt="clr-namespace:Information_system.Data"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DataContext="{d:DesignInstance vm:ListOfBookingViewModel}"
             d:DesignHeight="450" d:DesignWidth="800" FontSize="{Binding FontSizeUserControl}">

    <Grid Background="#313338">
        <Grid Visibility="{Binding ViewDataVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition Height="30px" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Button Grid.Row="0" Content="Book a room" Command="{Binding EnterCreatingDataStateCommand}" />

            <DataGrid Grid.Row="1" AutoGenerateColumns="False"
                      ItemsSource="{Binding Bookings}"
                      ScrollViewer.CanContentScroll="True"
                      VerticalScrollBarVisibility="Visible"
                      HorizontalScrollBarVisibility="Visible">

                <DataGrid.Columns>
                    <DataGridTextColumn IsReadOnly="True" Width="1*" Header="Id" Binding="{Binding Id}" />
                    <DataGridTextColumn IsReadOnly="True" Width="1*" Header="Room Id" Binding="{Binding RoomId}" />
                    <DataGridTextColumn IsReadOnly="True" Width="1*" Header="Tenant Full Name" Binding="{Binding TenantFullName}" />
                    <DataGridTextColumn IsReadOnly="True" Width="1*" Header="Price of booking"
                                        Binding="{Binding PriceOfBooking}" />
                    <DataGridTextColumn IsReadOnly="True" Width="1*" Header="Start Date"
                                        Binding="{Binding DateOfStart}" />
                    <DataGridTextColumn IsReadOnly="True" Width="1*" Header="End Date" Binding="{Binding DateOfEnd}" />
                    
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Content="Delete" 
                                        Command="{Binding Path=DataContext.DeleteRecord, 
                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                        CommandParameter="{Binding}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <Grid Visibility="{Binding CreatingDataVisibility}">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Row="0" Grid.Column="0" Margin="20 20">
                        <TextBox BorderBrush="BlueViolet" Foreground="Beige" IsReadOnly="True" Text="Room" TextAlignment="Left" />
                        <TextBox BorderBrush="BlueViolet" Foreground="Beige" IsReadOnly="True" Text="Tenant full name" TextAlignment="Left" />
                        <TextBox BorderBrush="BlueViolet" Foreground="Beige" IsReadOnly="True" Text="Tenant phone number" TextAlignment="Left" />
                        <TextBox BorderBrush="BlueViolet" Foreground="Beige" IsReadOnly="True" Text="Date of start" TextAlignment="Left" />
                        <TextBox BorderBrush="BlueViolet" Foreground="Beige" IsReadOnly="True" Text="Date of end" TextAlignment="Left" />
                        
                        <TextBox BorderBrush="BlueViolet" Foreground="Beige" IsReadOnly="True" Text="Price of booking" TextAlignment="Left" />

                    </StackPanel>

                    <StackPanel Grid.Row="0" Grid.Column="1" Margin="20 20">
                        <ComboBox BorderBrush="BlueViolet" ItemsSource="{Binding Path=TypesOfRooms}" Foreground="Beige" HorizontalContentAlignment="Center"
                                  DisplayMemberPath="TitleOfType"
                                  SelectedValuePath="TitleOfType"
                                  SelectedItem="{Binding Path=SelectedRoom}">

                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Setter Property="Background" Value="#1e1f22"/>
                                    <Setter Property="BorderBrush" Value="#1e1f22"/>
                                </Style>
                         
                            </ComboBox.ItemContainerStyle>
                        
                        </ComboBox>
                        <TextBox Text="{Binding TenantFullName}" BorderBrush="BlueViolet" Foreground="Beige" TextAlignment="Center" />
                        <TextBox Text="{Binding TenantPhoneNumber}"  BorderBrush="BlueViolet" Foreground="Beige" TextAlignment="Center" />
                        
                        <DatePicker SelectedDate="{Binding DateOfStart}" BorderBrush="BlueViolet" HorizontalAlignment="Center" />  
                        <DatePicker SelectedDate="{Binding DateOfEnd}" BorderBrush="BlueViolet" HorizontalAlignment="Center" />  
                        
                        <TextBox BorderBrush="BlueViolet" Foreground="Beige" IsReadOnly="True" Text="" TextAlignment="Left" />
                    </StackPanel>
                
                </Grid>
                <!--<Grid Margin="20">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                
                    <TextBox BorderBrush="BlueViolet" Margin="10px" Grid.Row="0" IsReadOnly="True" Foreground="Beige" Text="Services" TextAlignment="Center" />
                
                    <DataGrid Grid.Row="1" AutoGenerateColumns="False" Width="300px"
                              ItemsSource="{Binding Bookings}"
                              ScrollViewer.CanContentScroll="True"
                              VerticalScrollBarVisibility="Visible"
                              HorizontalScrollBarVisibility="Visible">

                        <DataGrid.Columns>
                            <DataGridTextColumn IsReadOnly="True" Width="1*" Header="Id" Binding="{Binding Id}" />
                            <DataGridTextColumn IsReadOnly="True" Width="1*" Header="Price of booking"
                                                Binding="{Binding PriceOfBooking}" />
                            <DataGridTextColumn IsReadOnly="True" Width="1*" Header="Start Date"
                                                Binding="{Binding DateOfStart}" />
                            <DataGridTextColumn IsReadOnly="True" Width="1*" Header="End Date" Binding="{Binding DateOfEnd}" />
                        </DataGrid.Columns>
                    </DataGrid>

                    <Button Grid.Row="2" Margin="20" Content="Add Service" HorizontalAlignment="Center"/>
                </Grid>-->

            <Button Width="150px" Height="Auto" FontSize="{Binding FontSizeUserControl}" Margin="20" Content="Create" VerticalAlignment="Bottom">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding CreateRecord}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
        </Grid>

        <Grid Visibility="{Binding EditDataVisibility}">
           
        </Grid>
    </Grid>
</UserControl>